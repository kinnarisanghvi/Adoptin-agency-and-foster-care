/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.RegisterChildRole;

/**
 *
 * @author chitra
 */
   

import Business.Child.Child;
import Business.EcoSystem;
import Business.Enterprise.AdoptionEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FosterCareEnterprise;
import Business.Enterprise.HomeStudyEnterprise;
import Business.Network.Network;
import Business.Organization.CriminalCheckOrganization;
import Business.Organization.Organization;
import Business.Organization.RegisterChildOrganization;
import Business.Organization.RegisterParentOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userInterface.RegisterChildRole.ChildFromGovernment;
import userInterface.RegisterChildRole.ChildFromHospital;
import userInterface.RegisterChildRole.ChildFromSingleParentJPanel;

public class RegisterChildrenJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegisterChildrenJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private RegisterChildOrganization organization;
    private AdoptionEnterprise enterprise;
    private EcoSystem business;
    
    public RegisterChildrenJPanel(JPanel userProcessContainer, UserAccount account, RegisterChildOrganization organization, AdoptionEnterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.organization = organization;
        this.business = business;
        validate();
                btnParent.setEnabled(false);                   
                btnFamily.setEnabled(false);
                btnHospital.setEnabled(false);
                btnGovernment.setEnabled(false);
    
    }
    
    public void validate(){
        
        txtHeight.addKeyListener(new KeyAdapter() {
                public void keyTyped(KeyEvent e) {
                    
                    char vChar = e.getKeyChar();
                    if (!(Character.isDigit(vChar)
                            || (vChar == KeyEvent.VK_BACK_SPACE)
                            || (vChar == KeyEvent.VK_DELETE))) {
                        
                       e.consume();
                    }
               
                }
            });
        
        txtWeight.addKeyListener(new KeyAdapter() {
                public void keyTyped(KeyEvent e) {
                    
                    char vChar = e.getKeyChar();
                    if (!(Character.isDigit(vChar)
                            || (vChar == KeyEvent.VK_BACK_SPACE)
                            || (vChar == KeyEvent.VK_DELETE))) {
                        
                       e.consume();
                    }
               
                }
            });
        
        
        txtAge.addKeyListener(new KeyAdapter() {
                public void keyTyped(KeyEvent e) {
                    
                    char vChar = e.getKeyChar();
                    if (!(Character.isDigit(vChar)
                            || (vChar == KeyEvent.VK_BACK_SPACE)
                            || (vChar == KeyEvent.VK_DELETE))) {
                        
                       e.consume();
                    }
               
                }
            });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNext = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtChildName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        txtWeight = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        cmbChildInfo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtRegistered = new javax.swing.JTextField();
        btnParent = new javax.swing.JButton();
        btnFamily = new javax.swing.JButton();
        btnHospital = new javax.swing.JButton();
        btnGovernment = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        chkYes = new javax.swing.JCheckBox();
        chkNo = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(255, 204, 204));

        btnNext.setText("Next >>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Register Child");

        jLabel2.setText("Child Name :");

        jLabel3.setText("Age :");

        txtChildName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChildNameActionPerformed(evt);
            }
        });

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        jLabel4.setText("Weight");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel5.setText("Height");

        cmbChildInfo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Family", "SingleParent", "Hospital", "Government" }));
        cmbChildInfo.setSelectedIndex(-1);
        cmbChildInfo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbChildInfoItemStateChanged(evt);
            }
        });
        cmbChildInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbChildInfoActionPerformed(evt);
            }
        });

        jLabel6.setText("Child has been registered from ?");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel7.setText("Child Has been Registered From ?");

        txtRegistered.setEnabled(false);

        btnParent.setText("Single Parent");
        btnParent.setEnabled(false);
        btnParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParentActionPerformed(evt);
            }
        });

        btnFamily.setText("Family");
        btnFamily.setEnabled(false);
        btnFamily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFamilyActionPerformed(evt);
            }
        });

        btnHospital.setText("Hospital");
        btnHospital.setEnabled(false);
        btnHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalActionPerformed(evt);
            }
        });

        btnGovernment.setText("Government");
        btnGovernment.setEnabled(false);
        btnGovernment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGovernmentActionPerformed(evt);
            }
        });

        jLabel8.setText("Submit children medical report");

        chkYes.setText("yes");

        chkNo.setText("No");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(410, 410, 410)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(40, 40, 40))
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(69, 69, 69)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtChildName)
                                        .addComponent(txtAge, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                        .addComponent(txtWeight)
                                        .addComponent(txtHeight)
                                        .addComponent(txtRegistered))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbChildInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(chkYes)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(chkNo)))
                                        .addGap(5, 5, 5)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnFamily, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnGovernment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChildName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtHeight, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtRegistered, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbChildInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnParent)
                    .addComponent(btnHospital))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFamily)
                    .addComponent(btnGovernment)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkYes)
                    .addComponent(chkNo))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtChildNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChildNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChildNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);                
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
        //if(txtChildName.getText() == null || txtAge.getText() == null || txtWeight.getText() == null || txtHeight.getText() == null){
            
        //    JOptionPane.showMessageDialog(null, "Please enter all fields");
        //}else{
         String childName = txtChildName.getText();
         int childAge = Integer.parseInt(txtAge.getText());
         double weight = Double.parseDouble(txtWeight.getText());
         double height = Double.parseDouble(txtHeight.getText());
         
         String medReportStatus = Child.MEDICAL_REPORT_STATUS_NO;
         String adoptionStatus = Child.CHILD_MEDICALCHECKPENDING;
         if(chkYes.isSelected()){
             medReportStatus=Child.MEDICAL_REPORT_STATUS_YES;
             adoptionStatus = Child.CHILD_WAITING;
         }/*else{
             medReportStatus = Child.MEDICAL_REPORT_STATUS_NO;
         }*/
        
         String registeredFrom = cmbChildInfo.getSelectedItem().toString();
    
         //txtRegistered.setText(cmbChildInfo.getSelectedItem().toString());
         
         if(txtRegistered.getText().equals("SingleParent") && (!chkYes.isSelected())) {
             JOptionPane.showMessageDialog(null, "Please attach medical report to proceed");
             return;
         } else if(txtRegistered.getText().equals("Family") && (!chkYes.isSelected())) {
             JOptionPane.showMessageDialog(null, "Please attach medical report to proceed");
             return;
         } else if(txtRegistered.getText().equals("Hospital") && (!chkYes.isSelected())) {
             JOptionPane.showMessageDialog(null, "Please attach medical report to proceed");
             return;
         } else {
         Child child = enterprise.getChildDirectory().addChild();
         child.setChildName(childName);
         child.setAge(childAge);
         child.setWeight(weight);
         child.setHeight(height); 
         child.setMedicalReportStatus(medReportStatus);
         child.setRegisteredFrom(registeredFrom);
         child.setAdoptionStatus(adoptionStatus);
         Object selected = cmbChildInfo.getSelectedItem();
         
         
        // Organization org = null;
            Enterprise ent =  null;
       
            for (Network network : business.getNetworkList()) {
                 for (Enterprise enterprise1 : network.getEnterpriseDirectory().getEnterpriseList())
                 if(enterprise1 instanceof FosterCareEnterprise)
                 {
                         ent=enterprise1;
                        break;

                 }
                 if(ent != null){
                      Child fosterChild = ent.getChildDirectory().addChild();
                      fosterChild.setChildName(childName);
                      fosterChild.setAge(childAge);
                      fosterChild.setWeight(weight);
                      fosterChild.setHeight(height); 
                      fosterChild.setMedicalReportStatus(medReportStatus);
                      fosterChild.setRegisteredFrom(registeredFrom);
                      fosterChild.setAdoptionStatus(adoptionStatus);
                   // Object selected = cmbChildInfo.getSelectedItem();
                 }
            }
            JOptionPane.showMessageDialog(null, "Child Registered Successfully!!");
            }
            txtChildName.setText(" ");
            txtAge.setText(" ");
            txtWeight.setText(" ");
            txtHeight.setText(" ");
     //  }
         
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cmbChildInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbChildInfoActionPerformed
        // TODO add your handling code here:
        
       // Object selected = cmbChildInfo.getSelectedItem(); 
        
//        if(selected.equals("Single Parent")) {
//             ChildFromSingleParentJPanel childParent = new ChildFromSingleParentJPanel(userProcessContainer, account, organization, enterprise, business);
//             userProcessContainer.add("ChildFromSingleParent", childParent);             
//             CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//             layout.next(userProcessContainer);                                 
//         } else if(selected.equals("Hospital")) {
//             ChildFromHospital childHospital = new ChildFromHospital(userProcessContainer, account, organization, enterprise, business);
//             userProcessContainer.add("ChildFromHospital", childHospital);
//             CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//             layout.next(userProcessContainer);             
//       } else if(selected.equals("Government"))  {
//             ChildFromGovernment childGovernment = new ChildFromGovernment(userProcessContainer, account, organization, enterprise, business);
//             userProcessContainer.add("childGovernment", childGovernment);
//             CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//         } else {
//           JOptionPane.showMessageDialog(null, "Please select an option to proceed");
//       }
    }//GEN-LAST:event_cmbChildInfoActionPerformed

    public void populateButton() 
    {
        
        if(cmbChildInfo.getSelectedIndex() != -1)
        {
            String cmbValue = (String) cmbChildInfo.getSelectedItem();
        
            if(cmbValue.equals("Family"))   {
                btnParent.setEnabled(false);                   
                btnFamily.setEnabled(true);
                btnHospital.setEnabled(false);
                btnGovernment.setEnabled(false);
            }   
            
             if(cmbValue.equals("SingleParent"))   {
                btnParent.setEnabled(true);                   
                btnFamily.setEnabled(false);
                btnHospital.setEnabled(false);
                btnGovernment.setEnabled(false);
            } 
             
              if(cmbValue.equals("Hospital"))   {
                btnParent.setEnabled(false);                   
                btnFamily.setEnabled(false);
                btnHospital.setEnabled(true);
                btnGovernment.setEnabled(false);
            }
              
               if(cmbValue.equals("Government"))   {
                btnParent.setEnabled(false);                   
                btnFamily.setEnabled(false);
                btnHospital.setEnabled(false);
                btnGovernment.setEnabled(true);
            } 
            
        }
    }
    
    public boolean checkMedical()
    {
        boolean selected = chkYes.isSelected();
        if(txtRegistered.getText().equals("SingleParent")) {
            if(!selected){
                JOptionPane.showMessageDialog(null, "Please attach child medical report");
                return selected;
            }
        }
        return false;
    }
    
    private void cmbChildInfoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbChildInfoItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED) {
            txtRegistered.setText((String) cmbChildInfo.getSelectedItem());            
        }       
        //populateButton();
    }//GEN-LAST:event_cmbChildInfoItemStateChanged

    private void btnParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParentActionPerformed
        // TODO add your handling code here:
        ChildFromSingleParentJPanel childParent = new ChildFromSingleParentJPanel(userProcessContainer, account, organization, enterprise, business);
             userProcessContainer.add("ChildFromSingleParent", childParent);             
             CardLayout layout = (CardLayout) userProcessContainer.getLayout();
             layout.next(userProcessContainer); 
        
    }//GEN-LAST:event_btnParentActionPerformed

    private void btnHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalActionPerformed
        // TODO add your handling code here:
        ChildFromHospital childHospital = new ChildFromHospital(userProcessContainer, account, organization, enterprise, business);
        userProcessContainer.add("ChildFromHospital", childHospital);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);  
    }//GEN-LAST:event_btnHospitalActionPerformed

    private void btnFamilyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFamilyActionPerformed
        // TODO add your handling code here:
        ChildFromFamily childFamily = new ChildFromFamily(userProcessContainer, account, organization, enterprise, business);
        userProcessContainer.add("ChildFromHospital", childFamily);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
    }//GEN-LAST:event_btnFamilyActionPerformed

    private void btnGovernmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGovernmentActionPerformed
        // TODO add your handling code here:
        ChildFromGovernment childGovernment = new ChildFromGovernment(userProcessContainer, account, organization, enterprise, business);
        userProcessContainer.add("childGovernment", childGovernment);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);        
    }//GEN-LAST:event_btnGovernmentActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFamily;
    private javax.swing.JButton btnGovernment;
    private javax.swing.JButton btnHospital;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnParent;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JCheckBox chkNo;
    private javax.swing.JCheckBox chkYes;
    private javax.swing.JComboBox<String> cmbChildInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtChildName;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtRegistered;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
