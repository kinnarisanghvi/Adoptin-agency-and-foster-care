/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.RegisterParentRole;

import Business.EcoSystem;
import Business.Enterprise.AdoptionEnterprise;
import Business.Organization.ManagementOrganization;
import Business.Organization.Organization;
import Business.Organization.ParentOrganization;
import Business.Organization.RegisterParentOrganization;
import Business.ProspectiveParent.ProspectiveParent;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ManagementWorkRequest;
import Business.WorkQueue.ParentWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static userInterface.RegisterParentRole.RegisterParent1JPanel.sendEmail;

/**
 *
 * @author sneha
 */

public class ManageParentsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageParentsJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private RegisterParentOrganization organization;
    private AdoptionEnterprise enterprise;
    private EcoSystem business;
    
    public ManageParentsJPanel(JPanel userProcessContainer, UserAccount account, RegisterParentOrganization organization, AdoptionEnterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.organization = organization;
        this.business = business;
        lblEnterprise.setText(enterprise.getName());
       // refreshData();
        populateParentTable();
        populateRequestTable();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void populateParentTable(){
        
       DefaultTableModel model = (DefaultTableModel) parentJTable.getModel();

        model.setRowCount(0);
        for (ProspectiveParent parent: enterprise.getProspectiveParentDirectory().getParentList()) {
            
                Object[] row = new Object[4];
                row[0] = parent;
                row[1] = parent.getParent1Age();
                row[2] = parent.getParent2();
                row[3] = parent.getParent2Age();

                model.addRow(row);
            
        } 
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) requestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
           //String result = ((ManagementWorkRequest) request).getMessage();
          // String result = ((ManagementWorkRequest) request).getStatus();
            //row[3] = result == null ? "Waiting" : result;
            row[3] = null;
            
            model.addRow(row);
        }
        
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        parentJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        btnInitiateProcess = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblEnterprise = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        txtSearchByName = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 204, 204));

        parentJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parent1", "Age", "Parent2", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(parentJTable);

        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parent", "Reciever", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestJTable);

        btnInitiateProcess.setText("InitiateProcess");
        btnInitiateProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInitiateProcessActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Registered Parent Details:");

        jLabel2.setText("Request sent to Management to initiate adoption Process:");

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setText("Manage Parents:");

        lblEnterprise.setText("jLabel3");

        btnRemove.setText("Remove Parent");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnSearch.setText("Search Parent");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTitle)
                                .addGap(37, 37, 37)
                                .addComponent(lblEnterprise))
                            .addComponent(jLabel1)
                            .addComponent(btnInitiateProcess)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSearch)
                                .addGap(29, 29, 29)
                                .addComponent(txtSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnRemove))))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(lblEnterprise))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch)
                            .addComponent(txtSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemove)
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addComponent(btnInitiateProcess)
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(168, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnInitiateProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInitiateProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = parentJTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        ProspectiveParent vi = (ProspectiveParent)parentJTable.getValueAt(selectedRow, 0);
        
        ManagementWorkRequest request = new ManagementWorkRequest();
        request.setParent(vi);
        request.setSender(account);
        request.setStatus("Initiate Process");
       // JOptionPane.showMessageDialog(null, "Request sent to management ");
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof ManagementOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
        }
        
        //Create a parent request to register for training
        ParentWorkRequest parentReq = new ParentWorkRequest();
        parentReq.setSender(account);
        parentReq.setStatus("Initiate Training");
        parentReq.setDescription("Please register and complete 3 levels of training");
        parentReq.setParent(vi);
        
        Organization orgParent = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof ParentOrganization){
                orgParent = organization;
                break;
            }
        }
        if (orgParent!=null){
            //orgParent.getWorkQueue().getWorkRequestList().add(request);
           // account.getWorkQueue().getWorkRequestList().add(request);
            for(UserAccount acc: orgParent.getUserAccountDirectory().getUserAccountList()){
                
                if(acc.getEmployee().toString().equals(vi.toString())){
                    acc.getWorkQueue().getWorkRequestList().add(parentReq);
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "Request message sent to management");
        sendEmail("parent2202@gmail.com", "Parent@2202", vi.getEmailId().toString(), "Request Initiated", "Dear " + vi.getParent1().toString() + "," + "Your Application for adopting child is under review. ");
        populateRequestTable();
    }//GEN-LAST:event_btnInitiateProcessActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int selectedRow = parentJTable.getSelectedRow();
        if(selectedRow>=0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "would you like to delete parent record?","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                ProspectiveParent p = (ProspectiveParent)parentJTable.getValueAt(selectedRow, 0);
                enterprise.getProspectiveParentDirectory().removeParent(p);
                populateParentTable();
            }
            
        }else{
            
            JOptionPane.showMessageDialog(null, "Please select a row","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
         ProspectiveParent result = enterprise.getProspectiveParentDirectory().searchParent(txtSearchByName.getText());
        
        if(result == null)
        {
        JOptionPane.showMessageDialog(null, "Parent not found", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            
            ViewParentPanel panel = new ViewParentPanel(userProcessContainer, result);
          userProcessContainer.add("ViewParentPanel", panel);
               CardLayout layout = (CardLayout)userProcessContainer.getLayout();
               layout.next(userProcessContainer);
        
        
        }
    }//GEN-LAST:event_btnSearchActionPerformed
    
    public void refreshData(){
        
        for(Organization o:enterprise.getOrganizationDirectory().getOrganizationList()){
            if(o.getWorkQueue().getWorkRequestList() != null){
            for(WorkRequest w:o.getWorkQueue().getWorkRequestList()){
                if(w.getReceiver() != null && account.getWorkQueue().getWorkRequestList() != null){
                for(WorkRequest Req:account.getWorkQueue().getWorkRequestList()){
                //w.setStatus(c);
                if(w.getParent().equals(Req.getParent())){
                String status = Req.getStatus();
                w.setStatus(status);
                        }
                     }
                }
                
            }
        }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnInitiateProcess;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable parentJTable;
    private javax.swing.JTable requestJTable;
    private javax.swing.JTextField txtSearchByName;
    // End of variables declaration//GEN-END:variables
}
